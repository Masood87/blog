<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Tips on Masood Sadat Blog</title>
    <link>/categories/r-tips/</link>
    <description>Recent content in R Tips on Masood Sadat Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r-tips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Confidence Interval wtih R</title>
      <link>/2018/06/15/confidence-interval-wtih-r/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/15/confidence-interval-wtih-r/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Collecting Tweets with R</title>
      <link>/2018/06/14/collecting-tweets/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/14/collecting-tweets/</guid>
      <description>In this post I am going to download tweets using twitteR package.
To being, you have to have a twitter account. If you do not have, create a twitter account on twitter.com.
 Create a twitter application on apps.twitter.com. There, you have to insert a number of information, see the following screen shot.
   Once, you created an application, you will have access to API Key and API Secret in the Keys and Access Tokens tab.</description>
    </item>
    
    <item>
      <title>Explore Correlation Among Variables with Corrplot</title>
      <link>/2018/06/14/explore-correlation-among-variables-with-corrplot/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/14/explore-correlation-among-variables-with-corrplot/</guid>
      <description>Exploring relationship among variables in a data set is never easier with corrplot package and function of the same name. corrplot takes in a correlation matrix and returns a visual representation of that correlation matrix.
Try it for yourself.
Install and load corrplot package  install.packages(&amp;quot;corrplot&amp;quot;) library(corrplot) Estimate correlation between all variables of mtcars dataset using cor, and then plot the correlations using corrplot(). You have to specify a method, and there are quite a few of them–here I demonstrate two of them: square and number  mat &amp;lt;- cor(mtcars) corrplot(mat, method = &amp;quot;square&amp;quot;) corrplot(mat, method = &amp;quot;number&amp;quot;) To explore more, see the help (?</description>
    </item>
    
    <item>
      <title>Hypothesis testing with R</title>
      <link>/2018/06/14/hypothesis-testing-with-r/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/14/hypothesis-testing-with-r/</guid>
      <description>A Meaningful Relationship There seems to be a relatinship between weight (wt) and mileage (mpg) from the mtcars based on observing them on a scatter plot–perhaps a negative one.
library(ggplot2) ggplot(mtcars, aes(wt, mpg)) + geom_point() Fit a linear model to estimate the relationship between weight and mpg, and tidy the output. Looking at the statistics and p-value, I can reject the null hypothesis (no relationship).
library(broom) library(dplyr) tidy(lm(mpg ~ wt, data = mtcars)) ## term estimate std.</description>
    </item>
    
    <item>
      <title>Linear regression with R</title>
      <link>/2018/06/12/linear-regression-with-r/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/12/linear-regression-with-r/</guid>
      <description>Estimating linear regression Before starting, I am going to load a number of utility libraries for this session.
library(tidyverse) library(broom) library(plotly) A simple linear regression using mtcars dataset. I want to look at how weight of a car is associated with how many miles a car travels per gallon of gasoline–an indicator of fuel economy. I am going to look at their summary and scatter plot.</description>
    </item>
    
    <item>
      <title>Build a Website with R, blogdown, Hugo, and netlify.com</title>
      <link>/2018/06/08/build-a-website-with-r-blogdown-and-hugo/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/06/08/build-a-website-with-r-blogdown-and-hugo/</guid>
      <description>One of the coolest things I have learned in R recently is creating a website with blogdown package. The blogdown websites are created and maintained from within R mostly, which is the best part about it if you are a R user. There are many sources that provide details and reasons for using blogdown, so I will not dwell on that. Instead, I am going to provide a brief and to-the-point tutorial on how to start your website with R and blogdown.</description>
    </item>
    
    <item>
      <title>Plot Missing Values</title>
      <link>/2018/05/22/plot-missing-values/</link>
      <pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/05/22/plot-missing-values/</guid>
      <description>In this post, we will explore visdat package to visualize missing values. Then, we will recreate a similar plot using ggplot2 package. Next, using the ggplot2 method, we will visualize other numeric or character values in a dataset. Finally, using the ggplot2 method, we will create a custom function that will plot any value in any dataset.
 There are many ways to inspect and find about missing values in a dataset.</description>
    </item>
    
  </channel>
</rss>